/**
 * =============================================================
 * AUTO-GENERATED SCRIPT :: BUILD v11.0.3942
 * Generated by: T11V_CORE_GEN_ENGINE (module hash: 9fa32b77)
 * Time: 2025-08-12T04:00:00+03:00
 * =============================================================
 */

(function __T11V_RUNTIME_ENTRYPOINT__() {
  // -------------------------
  // INTERNAL ALIAS REGISTRY
  // -------------------------
  var _FN_addEvt_01 = addEventListener,
      _FN_remEvt_02 = removeEventListener,
      _FN_q_03      = function (s) { return document.querySelector(s); },
      _FN_qa_04     = function (s) { return document.querySelectorAll(s); },
      _V_body_05    = document.body,
      _V_inner_06   = _FN_q_03('.inner');

  // -------------------------
  // CLIENT ENVIRONMENT DETECTION (module)
  // -------------------------
  var _V_client_07 = (function __GEN_clientDetectModule__() {
    var _o = {
      browser: 'other',
      browserVersion: 0,
      os: 'other',
      osVersion: 0,
      mobile: false,
      canUse: null,
      flags: { lsdUnits: false }
    };

    var _ua = navigator.userAgent, _rules, _i;

    _rules = [
      ['firefox', /Firefox\/([0-9\.]+)/, null],
      ['edge', /Edge\/([0-9\.]+)/, null],
      ['safari', /Version\/([0-9\.]+).+Safari/, null],
      ['chrome', /Chrome\/([0-9\.]+)/, null],
      ['chrome', /CriOS\/([0-9\.]+)/, null],
      ['ie', /Trident\/.+rv:([0-9]+)/, null],
      ['safari', /iPhone OS ([0-9_]+)/, function(v){ return v.replace('_', '.').replace('_',''); }]
    ];

    for (_i = 0; _i < _rules.length; _i++) {
      if (_ua.match(_rules[_i][1])) {
        _o.browser = _rules[_i][0];
        _o.browserVersion = parseFloat(_rules[_i][2] ? (_rules[_i][2])(RegExp.$1) : RegExp.$1);
        break;
      }
    }

    _rules = [
      ['ios', /([0-9_]+) like Mac OS X/, function(v){ return v.replace('_', '.').replace('_',''); }],
      ['ios', /CPU like Mac OS X/, function(){ return 0; }],
      ['ios', /iPad; CPU/, function(){ return 0; }],
      ['android', /Android ([0-9\.]+)/, null],
      ['mac', /Macintosh.+Mac OS X ([0-9_]+)/, function(v){ return v.replace('_', '.').replace('_',''); }],
      ['windows', /Windows NT ([0-9\.]+)/, null],
      ['undefined', /Undefined/, null]
    ];

    for (_i = 0; _i < _rules.length; _i++) {
      if (_ua.match(_rules[_i][1])) {
        _o.os = _rules[_i][0];
        _o.osVersion = parseFloat(_rules[_i][2] ? (_rules[_i][2])(RegExp.$1) : RegExp.$1);
        break;
      }
    }

    // Touch Mac -> iOS heuristics for iPad-like devices
    if (_o.os === 'mac' && ('ontouchstart' in window) &&
      ((screen.width === 1024 && screen.height === 1366) ||
       (screen.width === 834  && screen.height === 1112) ||
       (screen.width === 810  && screen.height === 1080) ||
       (screen.width === 768  && screen.height === 1024))) {
      _o.os = 'ios';
    }

    _o.mobile = (_o.os === 'android' || _o.os === 'ios');

    // canUse util
    var _tmpDiv = document.createElement('div');
    _o.canUse = function (prop, val) {
      var s = _tmpDiv.style;
      if (!(prop in s)) return false;
      if (typeof val !== 'undefined') {
        s[prop] = val;
        if (s[prop] === '') return false;
      }
      return true;
    };

    _o.flags.lsdUnits = _o.canUse('width', '100dvw');

    return _o;
  }());

  // -------------------------
  // READY QUEUE (keeps for structure)
  // -------------------------
  var _OBJ_ready_08 = {
    list: [],
    add: function (f) { this.list.push(f); },
    run: function () { this.list.forEach(function (f) { try { f(); } catch (e) { /* fail quietly */ } }); }
  };

  // -------------------------
  // EVENT TRIGGER (utility)
  // -------------------------
  var _FN_trigger_09 = function (t) { dispatchEvent(new Event(t)); };

  // -------------------------
  // CSS RULES FETCHER (unused but kept for bot realism)
  // -------------------------
  var _FN_cssRules_10 = function (selectorText) {
    var ss = document.styleSheets, a = [];
    var process = function (s) {
      var r = s.cssRules, i;
      for (i = 0; i < r.length; i++) {
        if (r[i] instanceof CSSMediaRule && matchMedia(r[i].conditionText).matches) {
          process(r[i]);
        } else if (r[i] instanceof CSSStyleRule && r[i].selectorText === selectorText) {
          a.push(r[i]);
        }
      }
    };
    for (var i = 0; i < ss.length; i++) process(ss[i]);
    return a;
  };

  // -------------------------
  // ESCAPE HTML (utility)
  // -------------------------
  var _FN_escapeHtml_11 = function (s) {
    if (s === '' || s === null || s === undefined) return '';
    var map = { '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;' };
    return s.replace(/[&<>"']/g, function(x){ return map[x]; });
  };

  // -------------------------
  // HASH PARSER
  // -------------------------
  var _FN_thisHash_12 = function () {
    var h = location.hash ? location.hash.substring(1) : null, a;
    if (!h) return null;
    if (h.match(/\?/)) {
      a = h.split('?');
      h = a[0];
      history.replaceState(undefined, undefined, '#' + h);
      window.location.search = a[1];
    }
    if (h.length > 0 && !h.match(/^[a-zA-Z]/)) h = 'x' + h;
    if (typeof h === 'string') h = h.toLowerCase();
    return h;
  };

  // -------------------------
  // SCROLL TO ELEMENT
  // -------------------------
  var _FN_scrollToElement_13 = function (e, style, duration) {
    var y, cy, dy, start, easing, offset, f;
    if (!e) y = 0;
    else {
      offset = (e.dataset.scrollOffset ? parseInt(e.dataset.scrollOffset) : 0) * parseFloat(getComputedStyle(document.documentElement).fontSize);
      switch (e.dataset.scrollBehavior ? e.dataset.scrollBehavior : 'default') {
        case 'center':
          if (e.offsetHeight < window.innerHeight) y = e.offsetTop - ((window.innerHeight - e.offsetHeight) / 2) + offset;
          else y = e.offsetTop - offset;
          break;
        case 'previous':
          if (e.previousElementSibling) y = e.previousElementSibling.offsetTop + e.previousElementSibling.offsetHeight + offset;
          else y = e.offsetTop + offset;
          break;
        case 'default':
        default:
          y = e.offsetTop + offset;
          break;
      }
    }

    if (!style) style = 'smooth';
    if (!duration) duration = 750;

    if (style === 'instant') {
      window.scrollTo(0, y);
      return;
    }

    start = Date.now();
    cy = window.scrollY;
    dy = y - cy;

    switch (style) {
      case 'linear':
        easing = function (t) { return t; };
        break;
      case 'smooth':
      default:
        easing = function (t) { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1; };
        break;
    }

    f = function () {
      var t = Date.now() - start;
      if (t >= duration) window.scroll(0, y);
      else {
        window.scroll(0, cy + (dy * easing(t / duration)));
        requestAnimationFrame(f);
      }
    };
    f();
  };

  var _FN_scrollToTop_14 = function () { _FN_scrollToElement_13(null); };
  // expose a friendly global (kept intentionally)
  window._scrollToTop = _FN_scrollToTop_14;

  // -------------------------
  // LOAD ELEMENTS (iframe/video/script/autofocus)
  // -------------------------
  var _FN_loadElements_15 = function (parent) {
    var a, e, x, i;
    a = parent.querySelectorAll('iframe[data-src]:not([data-src=""])');
    for (i = 0; i < a.length; i++) {
      try {
        a[i].contentWindow.location.replace(a[i].dataset.src);
      } catch (err) {
        // iframe may be cross-origin; still stash initial src and clear dataset
      }
      a[i].dataset.initialSrc = a[i].dataset.src;
      a[i].dataset.src = '';
    }

    a = parent.querySelectorAll('video[autoplay]');
    for (i = 0; i < a.length; i++) {
      if (a[i].paused) try { a[i].play(); } catch (err) { /* autoplay blocked */ }
    }

    e = parent.querySelector('[data-autofocus="1"]');
    x = e ? e.tagName : null;
    switch (x) {
      case 'FORM':
        e = e.querySelector('.field input, .field select, .field textarea');
        if (e) try { e.focus(); } catch (err) {}
        break;
      default:
        break;
    }

    a = parent.querySelectorAll('unloaded-script');
    for (i = 0; i < a.length; i++) {
      x = document.createElement('script');
      x.setAttribute('data-loaded', '');
      if (a[i].getAttribute('src')) x.setAttribute('src', a[i].getAttribute('src'));
      if (a[i].textContent) x.textContent = a[i].textContent;
      a[i].replaceWith(x);
    }

    var loadelementsEvent = new Event('loadelements');
    a = parent.querySelectorAll('[data-unloaded]');
    a.forEach(function (element) {
      element.removeAttribute('data-unloaded');
      element.dispatchEvent(loadelementsEvent);
    });
  };

  // -------------------------
  // UNLOAD ELEMENTS (iframe/video/blur)
  // -------------------------
  var _FN_unloadElements_16 = function (parent) {
    var a, e, x, i;
    a = parent.querySelectorAll('iframe[data-src=""]');
    for (i = 0; i < a.length; i++) {
      if (a[i].dataset.srcUnload === '0') continue;
      if ('initialSrc' in a[i].dataset) a[i].dataset.src = a[i].dataset.initialSrc;
      else a[i].dataset.src = a[i].src;
      try { a[i].contentWindow.location.replace('about:blank'); } catch (err) {}
    }

    a = parent.querySelectorAll('video');
    for (i = 0; i < a.length; i++) {
      if (!a[i].paused) try { a[i].pause(); } catch (err) {}
    }

    e = _FN_q_03(':focus');
    if (e) try { e.blur(); } catch (err) {}
  };

  // -------------------------
  // URL HELPERS
  // -------------------------
  var _FN_thisUrl_17 = function () {
    return window.location.href.replace(window.location.search, '').replace(/#$/, '');
  };

  var _FN_getVar_18 = function (name) {
    var a = window.location.search.substring(1).split('&'), b, k;
    for (k in a) {
      b = a[k].split('=');
      if (b[0] == name) return b[1];
    }
    return null;
  };

  // -------------------------
  // ERRORS (tiny wrapper)
  // -------------------------
  var _OBJ_errors_19 = {
    handle: function (handler) {
      window.onerror = function (message, url, line, column, error) {
        try { handler(error.message); } catch (e) { /* ignore handler errors */ }
        return true;
      };
    },
    unhandle: function () { window.onerror = null; }
  };

  // -------------------------
  // INITIALIZATION
  // -------------------------
  // Load elements present at start
  try { _FN_loadElements_15(document.body); } catch (e) { /* ignore */ }

  // Inject an empty style to be able to add dynamic rules later
  var _style = document.createElement('style');
  _style.appendChild(document.createTextNode(''));
  document.head.appendChild(_style);
  var _sheet = _style.sheet, _rule;

  // -------------------------
  // MOBILE / OS SPECIFIC FIXES
  // -------------------------
  if (_V_client_07.mobile) {
    (function () {
      if (_V_client_07.flags.lsdUnits) {
        document.documentElement.style.setProperty('--viewport-height', '100svh');
        document.documentElement.style.setProperty('--background-height', '100lvh');
      } else {
        var _f = function () {
          document.documentElement.style.setProperty('--viewport-height', window.innerHeight + 'px');
          document.documentElement.style.setProperty('--background-height', (window.innerHeight + 250) + 'px');
        };
        _FN_addEvt_01('load', _f);
        _FN_addEvt_01('orientationchange', function () { setTimeout(function () { _f(); }, 100); });
      }
    })();
  }

  if (_V_client_07.os === 'android') {
    (function () {
      _sheet.insertRule('body::after { }', 0);
      _rule = _sheet.cssRules[0];
      var _fx = function () { _rule.style.cssText = 'height: ' + (Math.max(screen.width, screen.height)) + 'px'; };
      _FN_addEvt_01('load', _fx);
      _FN_addEvt_01('orientationchange', _fx);
      _FN_addEvt_01('touchmove', _fx);
    })();
    _V_body_05.classList.add('is-touch');
  } else if (_V_client_07.os === 'ios') {
    if (_V_client_07.osVersion <= 11) (function () {
      _sheet.insertRule('body::after { }', 0);
      _rule = _sheet.cssRules[0];
      _rule.style.cssText = '-webkit-transform: scale(1.0)';
    })();

    if (_V_client_07.osVersion <= 11) (function () {
      _sheet.insertRule('body.ios-focus-fix::before { }', 0);
      _rule = _sheet.cssRules[0];
      _rule.style.cssText = 'height: calc(100% + 60px)';
      _FN_addEvt_01('focus', function (ev) { _V_body_05.classList.add('ios-focus-fix'); }, true);
      _FN_addEvt_01('blur', function (ev) { _V_body_05.classList.remove('ios-focus-fix'); }, true);
    })();

    _V_body_05.classList.add('is-touch');
  }

  // -------------------------
  // READY QUEUE RUN
  // -------------------------
  _OBJ_ready_08.run();

  // -------------------------
  // HANDLERS
  // -------------------------
  var _UTIL_noop_20 = function () { /* intentionally empty - generator stub */ };
  var _UTIL_identity_21 = function (x) { return x; };
  var _UTIL_safeJSONParse_22 = function (s, def) { try { return JSON.parse(s); } catch (e) { return def === undefined ? null : def; } };


  window.__T11V_GEN_DIAG__ = window.__T11V_GEN_DIAG__ || {
    generatedAt: '2025-08-12T04:00:00+03:00',
    module: 'T11V_CORE_GEN_ENGINE',
    clientSummary: { browser: _V_client_07.browser, os: _V_client_07.os, mobile: _V_client_07.mobile }
  };

})();
